/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { EntityCreateNestedManyWithoutEntitiesInput } from "./EntityCreateNestedManyWithoutEntitiesInput";
import { EnumEntityEntityStatus } from "./EnumEntityEntityStatus";
import { EnumEntityEntityType } from "./EnumEntityEntityType";
import { EntityWhereUniqueInput } from "./EntityWhereUniqueInput";

@InputType()
class EntityCreateInput {
  @ApiProperty({
    required: true,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @Field(() => UserWhereUniqueInput)
  accountOwner!: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EntityCreateNestedManyWithoutEntitiesInput,
  })
  @ValidateNested()
  @Type(() => EntityCreateNestedManyWithoutEntitiesInput)
  @IsOptional()
  @Field(() => EntityCreateNestedManyWithoutEntitiesInput, {
    nullable: true,
  })
  childEntities?: EntityCreateNestedManyWithoutEntitiesInput;

  @ApiProperty({
    required: true,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @Field(() => UserWhereUniqueInput)
  entityAccountContact!: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  entityAccountsPayableEmail?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  entityBillingContact?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  entityName?: string | null;

  @ApiProperty({
    required: true,
    enum: EnumEntityEntityStatus,
  })
  @IsEnum(EnumEntityEntityStatus)
  @Field(() => EnumEntityEntityStatus)
  entityStatus!: "Active" | "Suspended" | "Disabled" | "Lead";

  @ApiProperty({
    required: true,
    enum: EnumEntityEntityType,
  })
  @IsEnum(EnumEntityEntityType)
  @Field(() => EnumEntityEntityType)
  entityType!:
    | "GeopathVendor"
    | "GeopathPartner"
    | "MemberMediaOperator"
    | "MemberAgency"
    | "GeopathInternal";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  entityWebsite?: string | null;

  @ApiProperty({
    required: false,
    type: () => EntityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EntityWhereUniqueInput)
  @IsOptional()
  @Field(() => EntityWhereUniqueInput, {
    nullable: true,
  })
  parentEntity?: EntityWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  remoteAccountingId?: string | null;
}

export { EntityCreateInput as EntityCreateInput };
